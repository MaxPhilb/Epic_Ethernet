/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8-dev */

#ifndef PB_EPICETHERNETINPUT_PB_H_INCLUDED
#define PB_EPICETHERNETINPUT_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _DigitalInput {
    int32_t id;
    bool value;
} DigitalInput;

typedef struct _AnalogInput {
    int32_t id;
    float value;
} AnalogInput;

typedef struct _EpicEthernetInput {
    pb_callback_t diginputs;
    int32_t numberDigitalInput; /* 192 entrees */
    pb_callback_t anainputs;
    int32_t numberAnalogInput; /* 16 entrees */
    pb_callback_t DeviceName; /*  */
    pb_callback_t MacAddress; /*  */
    int32_t timeStamp;
} EpicEthernetInput;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define DigitalInput_init_default                {0, 0}
#define AnalogInput_init_default                 {0, 0}
#define EpicEthernetInput_init_default           {{{NULL}, NULL}, 0, {{NULL}, NULL}, 0, {{NULL}, NULL}, {{NULL}, NULL}, 0}
#define DigitalInput_init_zero                   {0, 0}
#define AnalogInput_init_zero                    {0, 0}
#define EpicEthernetInput_init_zero              {{{NULL}, NULL}, 0, {{NULL}, NULL}, 0, {{NULL}, NULL}, {{NULL}, NULL}, 0}

/* Field tags (for use in manual encoding/decoding) */
#define DigitalInput_id_tag                      1
#define DigitalInput_value_tag                   2
#define AnalogInput_id_tag                       1
#define AnalogInput_value_tag                    2
#define EpicEthernetInput_diginputs_tag          1
#define EpicEthernetInput_numberDigitalInput_tag 2
#define EpicEthernetInput_anainputs_tag          3
#define EpicEthernetInput_numberAnalogInput_tag  4
#define EpicEthernetInput_DeviceName_tag         5
#define EpicEthernetInput_MacAddress_tag         6
#define EpicEthernetInput_timeStamp_tag          7

/* Struct field encoding specification for nanopb */
#define DigitalInput_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    id,                1) \
X(a, STATIC,   SINGULAR, BOOL,     value,             2)
#define DigitalInput_CALLBACK NULL
#define DigitalInput_DEFAULT NULL

#define AnalogInput_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    id,                1) \
X(a, STATIC,   SINGULAR, FLOAT,    value,             2)
#define AnalogInput_CALLBACK NULL
#define AnalogInput_DEFAULT NULL

#define EpicEthernetInput_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  diginputs,         1) \
X(a, STATIC,   SINGULAR, INT32,    numberDigitalInput,   2) \
X(a, CALLBACK, REPEATED, MESSAGE,  anainputs,         3) \
X(a, STATIC,   SINGULAR, INT32,    numberAnalogInput,   4) \
X(a, CALLBACK, SINGULAR, STRING,   DeviceName,        5) \
X(a, CALLBACK, SINGULAR, STRING,   MacAddress,        6) \
X(a, STATIC,   SINGULAR, INT32,    timeStamp,         7)
#define EpicEthernetInput_CALLBACK pb_default_field_callback
#define EpicEthernetInput_DEFAULT NULL
#define EpicEthernetInput_diginputs_MSGTYPE DigitalInput
#define EpicEthernetInput_anainputs_MSGTYPE AnalogInput

extern const pb_msgdesc_t DigitalInput_msg;
extern const pb_msgdesc_t AnalogInput_msg;
extern const pb_msgdesc_t EpicEthernetInput_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define DigitalInput_fields &DigitalInput_msg
#define AnalogInput_fields &AnalogInput_msg
#define EpicEthernetInput_fields &EpicEthernetInput_msg

/* Maximum encoded size of messages (where known) */
/* EpicEthernetInput_size depends on runtime parameters */
#define AnalogInput_size                         16
#define DigitalInput_size                        13

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
